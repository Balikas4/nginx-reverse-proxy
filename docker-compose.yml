version: '3.8'

services:
  reverse-proxy:
    build: ./nginx
    image: nginx:custom
    container_name: reverse-proxy
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - /etc/letsencrypt:/etc/letsencrypt
      - /var/www/certbot:/var/www/certbot
      - ../Rental-Platform-PinkRent/PinkRent/static_root:/app/PinkRent/static
      - ../Rental-Platform-PinkRent/PinkRent/media_root:/app/PinkRent/media
      - ../portfolio-website/portfolio/media_root:/app/portfolio/media
      - ../portfolio-website/portfolio/static_root:/app/portfolio/static
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - project_dev
      - portfolio_dev

  certbot:
    image: certbot/certbot
    volumes:
      - /etc/letsencrypt:/etc/letsencrypt
      - /var/www/certbot:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    depends_on:
      - reverse-proxy

  project_dev:
    build: ../Rental-Platform-PinkRent
    image: project:dev
    container_name: project.dev
    tty: true
    stdin_open: true
    restart: always
    ports:
      - 8000:8000
    volumes:
      - ../Rental-Platform-PinkRent:/app
    depends_on:
      - project_db
    links:
      - project_db:postgres
    command: >
      bash -c "cd /app/PinkRent &&
               python wait_for_postgres.py &&
               python manage.py migrate &&
               python manage.py collectstatic --noinput &&
               gunicorn PinkRent.wsgi --bind 0.0.0.0:8000"

  project_db:
    image: postgres
    container_name: project.db
    restart: always
    ports:
      - 5432:5432
    volumes:
      - ../Rental-Platform-PinkRent/dbdata:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: project
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_PORT: 5432

  portfolio_dev:
    build: ../portfolio-website
    image: portfolio:dev
    container_name: portfolio.dev
    tty: true
    stdin_open: true
    restart: always
    ports:
      - 8001:8001
    volumes:
      - ../portfolio-website:/app
      - ../portfolio-website/db.sqlite3:/app/db.sqlite3
    command: >
      bash -c "cd /app/portfolio &&
               python manage.py migrate &&
               python manage.py collectstatic --noinput &&
               gunicorn portfolio.wsgi --bind 0.0.0.0:8001"
